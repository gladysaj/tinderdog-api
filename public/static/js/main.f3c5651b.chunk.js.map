{"version":3,"sources":["components/DogCard/index.js","components/FloatingAction/index.js","components/FosterCard/index.js","components/Button/index.js","components/FosterDogs/index.js","components/AuthForm/index.js","Routes.js","App.js","serviceWorker.js","index.js"],"names":["Card","image","name","breed","age","description","className","uk-grid","class","src","alt","uk-cover","FloatingAction","type","uk-icon","this","props","icon","Component","FosterCard","DogCard","Button","label","FosterDogs","state","AuthForm","user","handleChange","handleSubmit","isLogin","location","pathname","onSubmit","htmlFor","onChange","id","required","to","Routes","exact","path","component","App","Boolean","window","hostname","match","UIKit","use","Icons","WithRouter","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f3c5651b.chunk.js","sourcesContent":["import React from \"react\";\n\n// this is destructuring the props object e.g. props.image\nconst Card = ({ image, name, breed, age, description }) => {\n  return (\n    <div\n      className=\"uk-child-width-1-3@m uk-child-width-1-2@s uk-flex-center uk-padding-small uk-text-left\"\n      uk-grid=\"true\"\n    >\n      <div>\n        <div className=\"uk-card uk-card-default uk-cover-container\">\n          <div className=\"uk-card-body uk-light uk-margin-xxlarge-top uk-overlay\">\n            <h2 className=\"uk-text-bold uk-text-left uk-text-xlarge\">{name}</h2>\n            <div className=\"uk-flex\">\n              <p class=\"uk-pill uk-text-left uk-text-small uk-text-bold uk-text-uppercase uk-background-primary\">\n                {breed}\n              </p>\n\n              <p class=\"uk-pill uk-text-left uk-text-small uk-text-bold uk-text-uppercase uk-background-primary\">\n                {age}\n              </p>\n            </div>\n\n            <p className=\"uk-text-left uk-text-emphasis\">{description}</p>\n          </div>\n          <img src={image} alt={name} uk-cover=\"true\" className=\"bg-img\" />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import React, { Component } from 'react';\n\nclass FloatingAction extends Component {\n    render() {\n        return(\n            <button class=\"uk-button uk-button-default floating-action\" type=\"button\"><span uk-icon={\"icon:\" + this.props.icon}></span></button>\n        )\n    }\n}\n\nexport default FloatingAction;","import React, { Component } from \"react\";\nimport DogCard from \"../DogCard\";\nimport FloatingAction from \"../FloatingAction\";\n\nclass FosterCard extends Component {\n  render() {\n    return (\n      <div className=\"card-container uk-margin-large-bottom\">\n        <DogCard\n          image={this.props.image}\n          name={this.props.name}\n          breed={this.props.breed}\n          age={this.props.age}\n          description={this.props.description}\n        />\n\n        <div className=\"uk-button-group floating-group uk-position-bottom-center\">\n          <FloatingAction icon=\"heart\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default FosterCard;\n","import React, { Component } from \"react\";\n\nclass Button extends Component {\n  render() {\n    return (\n      <button class=\"uk-button uk-button-default\" type=\"button\">\n        {this.props.label}\n      </button>\n    );\n  }\n}\n\nexport default Button;\n","import React, { Component } from \"react\";\nimport FosterCard from \"../FosterCard\";\nimport Button from '../Button'\n\nclass FosterDogs extends Component {\n  state = {};\n\n  render() {\n    return (\n      <section>\n        <h1 className=\"uk-margin-medium-top uk-text-bold uk-text-secondary\">\n          Adopt a Dog\n        </h1>\n        {/* this needs to be populated dynamically with DB */}\n        <FosterCard\n          image=\"https://source.unsplash.com/eoqnr8ikwFE\"\n          name=\"Muji\"\n          breed=\"Welsh Corgi\"\n          age=\"puppy\"\n          description=\"Muji is a sweet, small dog. He loves sleeping, playing and being around people.\"\n        />\n\n        <Button label=\"Show another ðŸ¦´\" />\n      </section>\n    );\n  }\n}\n\nexport default FosterDogs;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass AuthForm extends Component {\n  state = {\n    user: {},\n  };\n\n  handleChange = () => {};\n  handleSubmit = () => {};\n\n  render() {\n    const isLogin = this.props.location.pathname === \"/login\";\n    return (\n      <section className=\"uk-section\">\n        <div className=\"uk-container uk-flex uk-flex-center\">\n          <div className=\"uk-width-1-4\">\n            <h3>{isLogin ? \"Login\" : \"Signup\"}</h3>\n            <form\n              onSubmit={this.handleSubmit}\n              className=\"uk-width-1-1 uk-form-stacked uk-flex uk-flex-center uk-flex-column\"\n            >\n              <div className=\"uk-margin\">\n                <label className=\"uk-form-label\" htmlFor=\"email\">\n                  Email:\n                </label>\n                <div className=\"uk-inline\">\n                  <span\n                    className=\"uk-form-icon uk-form-icon-flip\"\n                    uk-icon=\"icon: mail\"\n                  ></span>\n                  <input\n                    onChange={this.handleChange}\n                    id=\"email\"\n                    name=\"email\"\n                    className=\"uk-input\"\n                    type=\"email\"\n                    required\n                  />\n                </div>\n                <div className=\"uk-margin\">\n                  <label className=\"uk-form-label\" htmlFor=\"password\">\n                    Password:\n                  </label>\n                  <div className=\"uk-inline\">\n                    <span\n                      className=\"uk-form-icon uk-form-icon-flip\"\n                      uk-icon=\"icon: lock\"\n                    ></span>\n                    <input\n                      onChange={this.handleChange}\n                      id=\"password\"\n                      name=\"password\"\n                      className=\"uk-input\"\n                      type=\"password\"\n                      required\n                    />\n                  </div>\n                </div>\n              </div>\n              {isLogin ? (\n                <div className=\"uk-text-meta\">\n                  AÃºn no tienes cuenta?\n                  <Link className=\"uk-text-primary\" to=\"/signup\">\n                    Crear cuenta\n                  </Link>\n                </div>\n              ) : null}\n              <button className=\"uk-button uk-button-primary\">\n                {isLogin ? \"Login\" : \"Signup\"}\n              </button>\n            </form>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default AuthForm;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport FosterDogs from './components/FosterDogs'\nimport AuthForm from \"./components/AuthForm\"\n\nconst Routes = () => (\n  <Switch>\n    <Route exact path=\"/\" component={() => <h1>Home</h1>}/>\n    <Route exact path=\"/foster\" component={ FosterDogs } />\n    <Route exact path=\"/login\" component={AuthForm}/>\n    <Route exact path=\"/signup\" component={AuthForm}/>\n  </Switch>\n);\n\nexport default Routes\n","import React from \"react\";\n\nimport \"./App.css\";\nimport Routes from \"./Routes\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Routes />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\n// UIKit\nimport UIKit from \"uikit\";\nimport Icons from \"uikit/dist/js/uikit-icons\";\nimport './theme/Custom.scss';\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { BrowserRouter } from \"react-router-dom\";\n\nUIKit.use(Icons);\n\nconst WithRouter = () => (\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n);\n\nReactDOM.render(<WithRouter />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}